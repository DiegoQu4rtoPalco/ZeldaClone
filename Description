 - Criando Janela do jogo tamanho e largura, extendendo ao canvas e implementando
Runnable.

 - Criando métodos start e stop, variáveis Boolean isRunning true, aonde método start
 é true e stop é false. Método start iremos instanciar Thread, thread é quando se existe
 vários processos sendo executado ele reconhece mais de um processo, depois estartei thread,
 já no método stop thread.join e aceite as exceções, vamos para o métod run, vamos usar agora
 a expreção booleana isRunning no método run, dizer assim while(isRunnig){}; dentro das aspas
 método tick() e render, tick é nosso update, render é aonde será desenhado, no método principal
 aonde foi instanciado o construtor game será estarteado, para testar se está sendo executado em
 tick coloque uma mensagem.
 
 - Desenhando no método render, usaremos BufferedStrategy com parametros no 3 retornando ao void,
 criando um objeto private BufferedImage fundo, instanciando ao construtor com o tipo RGB, adicionando
 Graphics g = fundo.getGraphics(); g = bs.getDrawGraphics();, para chamar imagem use g.drawImage(fundo,
 posX, posY, null); bs.show(); para poder mostrar a imagem e atualizar.
 
 - Agora vamos fazer nosso jogo rodar em 60 FPS, modo que muitos jogadores usam, e mostrar no console
  em tempo real, para isso usaremos algumas variáveis, adicione método stop após duas chaves.
 
 
 - Agora usaremos orientação a objetos para organização dos códigos e suas utilidade em pacotes novos
 novo pacote com.zelda.entities aonde sera os movimentos do jogo, pacote com.zelda.graficos aonde trabalhara
 com imagens, dentro desse pacote nova classe SpriteSheet com suas configurações, dentro do paconte entities
 vamos criar classe Entities e vamos adicionar variaves de movimentos e tamanho, adicionar ao construtor e seus
 métodos Setters. Criando nova classe Player extendendo a classe Enteties, observe que pede para adicionar construtor
 com super, classe aonde pega todos os dados já criado da classe entities. Depois na classe Main vamos trabalhar com List
 cria se um objeto public List<Entities> entities, instanciando no construtor chamando o objeto e e a classe, com o laço
 for nos métodos tick e render passaremos a variavel i pegando os métodos das outras classes, para imagem aparecer na 
 classe Main instanciaremos direto no contrutor a classe Player player com parametros (0, 0, 65, 65, spriteScheet.getSprite(0, 
 0, 65, 65)); antes disso spriteSheet no construro mostrara o caminho da imagem, spriteSheet = new SpriteSheet("/personagem.png");
 execute o programa se tudo ocorrer bem a imagem aparece na tela.
 